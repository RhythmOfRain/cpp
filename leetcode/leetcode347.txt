347. Top K Frequent Elements   My Submissions QuestionEditorial Solution
Total Accepted: 6046 Total Submissions: 13992 Difficulty: Medium
Given a non-empty array of integers, return the k most frequent elements.

For example,
Given [1,1,1,2,2,3] and k = 2, return [1,2].

Note: 
You may assume k is always valid, 1 ¡Ü k ¡Ü number of unique elements.
Your algorithm's time complexity must be better than O(n log n), where n is the array's size.

my solution:
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> umii;
        for(const auto e : nums)
            umii[e]++;
        priority_queue<pair<int, int>> pqii;
        for(auto iter = umii.begin(); iter != umii.end(); ++iter)
            pqii.push({iter -> second, iter -> first});
        vector<int> res;
        while(res.size() < k){
            res.push_back(pqii.top().second);
            pqii.pop();
        }
        return res;
    }
};