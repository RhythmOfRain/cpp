203. Remove Linked List Elements My Submissions QuestionEditorial Solution
Total Accepted: 57967 Total Submissions: 204392 Difficulty: Easy
Remove all elements from a linked list of integers that have value val.

Example
Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6
Return: 1 --> 2 --> 3 --> 4 --> 5

my solution:
因为这个单链表没有头结点，所以删除第一个结点时需要额外操作
思路 ：1首先检查是不是开头的结点等于指定值，如果是，将head指针后移。
       2设立前后两个指针q，p，如果p指向的结点的值是给定值，则将p的结果保存在temp中，同时将p指针后移，delete
        temp结点，如果p指向的结点的值不是给点值，则将p，q同时后移。

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
       
        ListNode *temp = NULL;
        while(head != NULL && head -> val == val){
            temp = head;
            head = head -> next;
            delete temp;
        }
        if(head == NULL)
            return NULL;
        
        ListNode *pre = head, *p = head -> next;
        while(p){
            if(p -> val == val){
                temp = p;
                p = p -> next;
                pre -> next = p;
                delete temp; 
            }else{
            pre = p;
            p = p -> next;
            }
        }
        return head;
    }
};
