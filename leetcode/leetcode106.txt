106. Construct Binary Tree from Inorder and Postorder Traversal  QuestionEditorial Solution  My Submissions
Total Accepted: 61235
Total Submissions: 205628
Difficulty: Medium
Given inorder and postorder traversal of a tree, construct the binary tree.

my solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return buildhelper(inorder, postorder, 0, inorder.size() - 1, 0, postorder.size() - 1);
        
    }
private:
    TreeNode *buildhelper(vector<int>& inorder, vector<int>& postorder, int ib, int ie, int pb, int pe){
        if(pb > pe) return NULL;
        int last = postorder[pe];
        TreeNode *root = new TreeNode(last);
        int i = -1;
        for(i = ib; i <= ie; ++i){
            if(inorder[i] == last)
                break;
        }
        root -> left = buildhelper(inorder, postorder, ib, i - 1, pb, pb + i -ib - 1);
        root -> right = buildhelper(inorder, postorder, i + 1, ie, pb + i - ib, pe - 1);
        return root;
    }
};