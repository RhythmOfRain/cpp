209. Minimum Size Subarray Sum   My Submissions QuestionEditorial Solution
Total Accepted: 37955 Total Submissions: 141054 Difficulty: Medium
Given an array of n positive integers and a positive integer s, find the minimal length of a subarray of which the sum ¡Ý s. If there isn't one, return 0 instead.

For example, given the array [2,3,1,2,4,3] and s = 7,
the subarray [4,3] has the minimal length under the problem constraint.

click to show more practice.

More practice:
If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n).

my solution:o(n)
class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int len = nums.size();
        int sum = 0, i = 0, res = INT_MAX;
        for(int j = 0; j < len; ++j){
            sum += nums[j];
            if(sum >= s){
                while(sum - nums[i] >= s){
                    sum -= nums[i++];
                }
                if(j - i + 1 < res)
                    res = j - i + 1;
            }
        }
        return res == INT_MAX ? 0: res;
    }
};