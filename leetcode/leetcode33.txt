33. Search in Rotated Sorted Array My Submissions QuestionEditorial Solution
Total Accepted: 102781 Total Submissions: 337613 Difficulty: Hard
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

my solution:
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l = 0, r = nums.size() - 1;
        while(l <= r){
            int mid = l + (r - l) / 2;
            if(nums[mid] == target) return mid;
            if(nums[l] <= nums[r]){
                if(nums[mid] < target) 
                    l = mid + 1;
                else 
                    r = mid - 1;
            }
            else if(nums[l] <= nums[mid]){
                if(target < nums[l] || target > nums[mid])
                    l = mid + 1;
                else
                    r = mid;
            }else{
                if(target < nums[mid] || target > nums[r])
                    r = mid - 1;
                else
                    l = mid;
            }
        }
        return  -1;
    }
};