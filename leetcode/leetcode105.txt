105. Construct Binary Tree from Preorder and Inorder Traversal  QuestionEditorial Solution  My Submissions
Total Accepted: 70471
Total Submissions: 238885
Difficulty: Medium
Given preorder and inorder traversal of a tree, construct the binary tree.

my solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        if(!preorder.size()) return NULL;
        return buildhelper(preorder, inorder, 0, preorder.size() - 1, 0, inorder.size());
    }
private:
    TreeNode* buildhelper(vector<int> &preorder, vector<int>& inorder, int ps, int pe, int is, int ie){
      if(ps > pe) return NULL;
      TreeNode* root = new TreeNode(preorder[ps]);
      int i = 0;
      for(i = is; i <= ie; ++i){
          if(inorder[i] == preorder[ps])
              break;
      }
      root -> left = buildhelper(preorder, inorder, ps + 1, ps + i - is, is, i - 1);
      root -> right = buildhelper(preorder, inorder, ps + i - is + 1, pe, i + 1, ie);
      return root;
    }
};