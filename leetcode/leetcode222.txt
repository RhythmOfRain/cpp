222. Count Complete Tree Nodes  QuestionEditorial Solution  My Submissions
Total Accepted: 42118
Total Submissions: 160046
Difficulty: Medium
Given a complete binary tree, count the number of nodes.

Definition of a complete binary tree from Wikipedia:
In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.

my solution:
二分查找的方法
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(root == NULL)
            return 0;
        TreeNode* leftNode = root -> left;
        TreeNode* rightNode = root -> left;
        int height = 0;
        while(rightNode){
            ++height;
            leftNode = leftNode -> left;
            rightNode = rightNode -> right;
        }
        int cnt = height == 0 ? 0 : (2 << (height - 1)) - 1;
        if(leftNode != NULL)
            return 1 + cnt + countNodes(root -> left);
        else
            return 1 + cnt + countNodes(root -> right);
        
    }
};
