421. Maximum XOR of Two Numbers in an Array

Given a non-empty array of numbers, a0, a1, a2, ¡­ , an-1, where 0 ¡Ü ai < 231.

Find the maximum result of ai XOR aj, where 0 ¡Ü i, j < n.

Could you do this in O(n) runtime?

Example:

Input: [3, 10, 5, 25, 2, 8]

Output: 28

Explanation: The maximum result is 5 ^ 25 = 28.

my solution:
class Solution {
public:
    int findMaximumXOR(vector<int>& nums) {
        int max = 0, mask = 0;
        unordered_set<int> cnt;
        for(int i = 31; i >= 0; --i){
            mask |= 1 << i;
            cnt.clear();
            for(auto num : nums)
                cnt.insert(num & mask);
            int candidate = max | (1 << i);
            for(auto num : cnt){
                if(cnt.find(candidate ^ num) != cnt.end()){
                    max = candidate;
                    break;
                }
            }
        }
        return max;
    }
};