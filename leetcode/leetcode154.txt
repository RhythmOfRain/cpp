154. Find Minimum in Rotated Sorted Array II My Submissions QuestionEditorial Solution
Total Accepted: 51529 Total Submissions: 149372 Difficulty: Hard
Follow up for "Find Minimum in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

The array may contain duplicates.

my solution:
class Solution {
public:
    int findMin(vector<int>& nums) {
        int l = 0, r = nums.size() - 1;
        while(l < r){
            if(nums[l] < nums[r])
                return nums[l];
            int mid = l + (r - l) / 2;
            if(nums[mid] < nums[r])
                r = mid;
            else if(nums[mid] > nums[r])
                l = mid + 1;
            else{
                l++;
                r--;
            }
        }
        return nums[l];
    }
};