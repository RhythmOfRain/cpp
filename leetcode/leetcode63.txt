63. Unique Paths II   My Submissions QuestionEditorial Solution
Total Accepted: 64374 Total Submissions: 219640 Difficulty: Medium
Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

Note: m and n will be at most 100.

my solution:动态规划
简单的方法是在外围加一圈零，这样代码会更简洁
class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int row = obstacleGrid.size(), col = obstacleGrid[0].size();
        if(obstacleGrid[0][0] == 0)
            obstacleGrid[0][0] = 1;
        else
            obstacleGrid[0][0] = 0;
        for(int i = 1; i < col; ++i){
            if(obstacleGrid[0][i - 1] == 1 && obstacleGrid[0][i] == 0)
                obstacleGrid[0][i] = 1;
            else
                obstacleGrid[0][i] = 0;
        }
        for(int i = 1; i < row; ++i){
            if(obstacleGrid[i - 1][0] == 1 && obstacleGrid[i][0] == 0 )
                obstacleGrid[i][0] = 1;
            else
                obstacleGrid[i][0] = 0;
        }
        for(int i = 1; i < row; ++i)
            for(int j = 1; j < col; ++j){
                if(obstacleGrid[i][j] == 1)
                    obstacleGrid[i][j] = 0;
                else
                    obstacleGrid[i][j] = obstacleGrid[i - 1][j] + obstacleGrid[i][j - 1];
            }
        return obstacleGrid[row - 1][col - 1];
    }
};