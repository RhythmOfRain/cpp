120. Triangle My Submissions QuestionEditorial Solution
Total Accepted: 70329 Total Submissions: 231806 Difficulty: Medium
Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.(意思是你只能往下走和往下右走)

For example, given the following triangle
[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).

Note:
Bonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.

my solution: dp
class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int rows = triangle.size();
        if(rows == 0) 
            return 0;
        for(int i = 1; i < rows; ++i){
            for(int j = 0; j <= i; ++j){
                int a = (j - 1) < 0 ? 0x3f3f3f3f : triangle[i - 1][j - 1];
                int b = j > i - 1 ? 0x3f3f3f3f: triangle[i - 1][j];
                triangle[i][j] += min(a,b);
            }
        }
        int res = triangle[rows - 1][0];
        for(int i = 1; i < rows; ++i)
            if(triangle[rows - 1][i] < res)
                res = triangle[rows - 1][i];
        return res;
    }
};
solution 2: 自底向上
class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int rows = triangle.size();
        if(rows == 0) 
            return 0;
        vector<int> res(rows + 1, 0);
        for(int i = rows - 1; i >= 0; --i){
            for(int j = 0; j <= i; ++j){
                res[j] = triangle[i][j] + min(res[j], res[j + 1]);
            }
        }
        return res[0];
    }
};