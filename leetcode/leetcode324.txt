324. Wiggle Sort II My Submissions QuestionEditorial Solution
Total Accepted: 12136 Total Submissions: 52590 Difficulty: Medium
Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example:
(1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. 
(2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].

Note:
You may assume all input has valid answer.

Follow Up:
Can you do it in O(n) time and/or in-place with O(1) extra space?

my solution:
class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int mid = nums.size() % 2 == 0 ? nums.size() / 2 - 1 : nums.size() / 2;
        int i = mid, j = nums.size() - 1, index = 0;
        vector<int> res(nums.size(), 0);
        while(i >= 0  && j > mid){
            res[index++] = nums[i--];
            res[index++] = nums[j--];
        }
        if(i == 0)
            res[index++] = nums[i--];
        nums = res;
        return;
        
    }
};