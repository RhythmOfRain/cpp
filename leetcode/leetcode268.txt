268. Missing Number 
Total Accepted: 47118 Total Submissions: 117951 Difficulty: Medium
Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?

my solution:
1.计算出应该有的总和，然后减掉实际的总和，即为missing number（做加法有可能溢出）
2.采用异或的方法求出missing number

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        /*int sum = 0, result = 0;
        for(int i = 0; i < nums.size(); ++i)
            sum += nums[i];
        result = nums.size() * (nums.size() + 1) / 2;
        return result - sum;*/
        int result = nums.size();
        for(int i = 0; i < nums.size(); ++i)
            result ^= nums[i] ^ i;
        return result;
        
    }
};

my solution:
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int res = nums.size();
        int len = res;
        for(int i = 0; i < len; ++i){
            res ^= i ^ nums[i];
        }
        return res;
    }
};