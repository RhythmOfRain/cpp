70. Climbing Stairs My Submissions QuestionEditorial Solution
Total Accepted: 101694 Total Submissions: 278810 Difficulty: Easy
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


my solution:
当台阶数为n时，总的上楼梯方案数为台阶数为n-1的方案数加上台阶数为n-2的方案数，因为最后一步只能是跨一步或两步
class Solution {
public:
    int climbStairs(int n) {
        if(n == 0)
            return 0;
        int *array = new int[n];
        array[0] = 1;
        array[1] = 2;
        for(int i = 2; i < n; ++i)
            array[i] = array[i - 1] + array[i - 2];
        int result = array[n - 1];
        delete []array;
        return result;      
    }
};