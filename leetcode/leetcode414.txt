414. Third Maximum Number   QuestionEditorial Solution  My Submissions
Total Accepted: 7647
Total Submissions: 29158
Difficulty: Easy
Contributors: ZengRed , 1337c0d3r
Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.

my solution:
class Solution {
public:
    int thirdMax(vector<int>& nums) {
        int count = 0, max, mid, small;
        max = mid = small = INT_MIN;
        for (int num : nums) {
            if ((count > 0 && num == max) || (count > 1 && num == mid)) continue;
            count++;
            if (num > max) {
                small = mid;
                mid = max;
                max = num;
            } else if (num > mid) {
                small = mid;
                mid = num;
            } else if (num > small) {
                small = num;
            }
        }
        return count < 3 ? max : small;
    }
};